isMale = c(FALSE, TRUE, FALSE, TRUE, TRUE)          # logical
name = c("Amy", "Bob", "Cindy", "Danny", "Edward")  # character
gender = factor( c("F", "M", "F", "M", "M") )       # factor
skin_color = factor( c("black", "black", "white", "yellow", "white") )  # factor
name[isMale]
#  only when height>180
name[height>180]
# only when height>180 and skin is yellow
name[height>180 & skin_color=="yellow"]
mean( height[gender == "M"] )
# select gender in nobuy and sum them together
sum(noBuy[gender=="F"])
#1
length(name[skin_color=="white"&gender=="F"])
#2
table(name[skin_color=="white"&gender=="F"])
df = data.frame(
noBuy = c(3L, 5L, 1L, 1L, 3L),
height = c(175, 168, 180, 181, 169),
isMale = c(FALSE, TRUE, FALSE, TRUE, TRUE),
name = c("Amy", "Bob", "Cindy", "Danny", "Edward"),
gender = factor( c("F", "M", "F", "M", "M") ),
skin_color = factor( c("black", "black", "white", "yellow", "white")),
stringsAsFactors=FALSE
)
df
subset(df, isMale & skin_color == "black")
mean(df$height)
table(df$gender)
tapply(df$height, df$gender, mean)
df[c(1,2), c(2,3)]
df[c(1,2), ]
df[df$height < 175 & df$isMale, ]
df[df$height < 175 & df$isMale, "name"]
df$name[df$height < 175 & df$isMale]
subset(df, height<175 & isMale)
subset(df, height<175 & isMale, name)
subset(df, height<175 & isMale)$name
subset(df, height<175 & isMale, c(name, noBuy))
df$name[df$isMale] # names of all males
df[df$height > 180 , "name"] # names of those who higher than 180
subset(df, height > 170 & !isMale)$name # names of female who is higher than 170
mean(df$height[df$isMale]) # to calculate the average of males' height
df$height[!df$isMale]
df$height[!df$isMale] %>% mean # female heights and then calculate the average
sum( subset(df, !isMale)$noBuy ) # total number of noBuy from female
subset(df, skin_color == "white" & !isMale ) %>% nrow # number of white female
sum(df$skin_color == "white" & !df$isMale ) # number of white female
df$height[!df$isMale]
df$height[!df$isMale] %>% mean # female heights and then calculate the average
df$height[df$isMale]
df$height[df$!isMale]
df$height[df$ !isMale]
# Installation, setup & formatting. Do not modify this code chunk.
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8); options(scipen=20, digits=4, width=90)
if(!require(pacman)) install.packages("pacman")
if(!require(dplyr)) install.packages("dplyr")
pacman::p_load(dplyr)
L = list(
IBM = read.csv("data/IBMStock.csv"),
GE = read.csv("data/GEStock.csv"),
PnG = read.csv("data/ProcterGambleStock.csv"),
Coke = read.csv("data/CocaColaStock.csv"),
Boeing = read.csv("data/BoeingStock.csv"))
lapply(L, class)
sapply(L, class)
sapply(L, names)
L = lapply(L, function(df) {
df$Date =  as.Date(df$Date, format="%m/%d/%y")
df
} )
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
mx = sapply(L, function(df) {
tapply(df$StockPrice, format(df$Date, "%m"), mean) })
mx
apply(mx, 2, which.max)
mx[c(1,12),]
# Installation, setup & formatting. Do not modify this code chunk.
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8); options(scipen=20, digits=4, width=90)
if(!require(pacman)) install.packages("pacman")
if(!require(dplyr)) install.packages("dplyr")
pacman::p_load(dplyr)
L = list(
IBM = read.csv("data/IBMStock.csv"),
GE = read.csv("data/GEStock.csv"),
PnG = read.csv("data/ProcterGambleStock.csv"),
Coke = read.csv("data/CocaColaStock.csv"),
Boeing = read.csv("data/BoeingStock.csv"))
lapply(L, class)
sapply(L, class)
sapply(L, names)
L = lapply(L, function(df) {
df$Date =  as.Date(df$Date, format="%m/%d/%y")
df
} )
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
mx = sapply(L, function(df) {
tapply(df$StockPrice, format(df$Date, "%m"), mean) })
mx
apply(mx, 2, which.max)
mx[c(1,12),]
View(mx)
View(L)
L = list(
IBM = read.csv("data/IBMStock.csv"),
GE = read.csv("data/GEStock.csv"),
PnG = read.csv("data/ProcterGambleStock.csv"),
Coke = read.csv("data/CocaColaStock.csv"),
Boeing = read.csv("data/BoeingStock.csv"))
View(L)
View(L)
#
IBM
L = list(
IBM = read.csv("data/IBMStock.csv"),
GE = read.csv("data/GEStock.csv"),
PnG = read.csv("data/ProcterGambleStock.csv"),
Coke = read.csv("data/CocaColaStock.csv"),
Boeing = read.csv("data/BoeingStock.csv"))
View(L)
#
L$IBM
#
View(L)
View(L)
L = list(
IBM = read.csv("data/IBMStock.csv"),
GE = read.csv("data/GEStock.csv"),
PnG = read.csv("data/ProcterGambleStock.csv"),
Coke = read.csv("data/CocaColaStock.csv"),
Boeing = read.csv("data/BoeingStock.csv"))
lapply(L, class)
#
length(L$IBM)
#
#
count(L$IBM)
#
#
count(L$IBM)
count(L$GE)
count(L$PnG)
count(L$Coke)
count(L$Boeing)
#
#
count(L$IBM)
count(L$GE)
count(L$PnG)
count(L$Coke)
count(L$Boeing)-1
#
#
count(L$IBM)
count(L$GE)
count(L$PnG)
count(L$Coke)
count(L$Boeing)
df
#
#
count(L$IBM)
count(L$GE)
count(L$PnG)
count(L$Coke)
count(L$Boeing)
#
#
df
#
L = lapply(L, function(df) {
df$Date =  as.Date(df$Date, format="%m/%d/%y")
df
} )
#
df
#
#
L$IBM$Date
#
#
lapply(L, count)
#
lapply(L, count())
#
lapply(L, count)
#
lapply(L, count)
# Installation, setup & formatting. Do not modify this code chunk.
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8); options(scipen=20, digits=4, width=90)
if(!require(pacman)) install.packages("pacman")
if(!require(dplyr)) install.packages("dplyr")
pacman::p_load(dplyr)
L = list(
IBM = read.csv("data/IBMStock.csv"),
GE = read.csv("data/GEStock.csv"),
PnG = read.csv("data/ProcterGambleStock.csv"),
Coke = read.csv("data/CocaColaStock.csv"),
Boeing = read.csv("data/BoeingStock.csv"))
lapply(L, class)
sapply(L, class)
sapply(L, names)
L = lapply(L, function(df) {
df$Date =  as.Date(df$Date, format="%m/%d/%y")
df
} )
#
lapply(L, count)
count(L$IBM)
#
#
L$IBM$Date
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
mx = sapply(L, function(df) {
tapply(df$StockPrice, format(df$Date, "%m"), mean) })
mx
apply(mx, 2, which.max)
mx[c(1,12),]
#
lapply(L, count)
#
#
sapply(L, count)
#
#
sapply(L, order)
#
L = lapply(L, function(df) {
df$Date =  as.Date(df$Date, format="%m/%d/%y")
df
} )
#
L = lapply(L, function(df) {
df$Date =  as.Date(df$Date, format="%m/%d/%y")
#
#
L = lapply(L, function(df) {
df$Date =  as.Date(df$Date, format="%m/%d/%y") df
#
S = lapply(L, function(df) {
df$Date =  as.Date(df$Date, format="%m/%d/%y") df})
#
L = lapply(L, function(df) {
df$Date =  as.Date(df$Date, format="%m/%d/%y") df})
#
L = lapply(L, function(df) {
df$Date =  as.Date(df$Date, format="%m/%d/%y")
df
} )
#
#
lapply(L,date sort)
#
lapply(L,date,sort)
View(L)
View(L)
#
lapply(L,Date,sort)
#
lapply(L$Date,sort)
#
#
sort(lapply(L, function(df) {
df$Date =  as.Date(df$Date, format="%m/%d/%y")
df
} ))
#
sort(lapply(L))
#
lapply(L$IBM,min)
#
#
lapply(L,min,df$Date)
#
lapply(df,min,df$Date)
#
f<-function(df){
min(df$Date)
}
lapply(L,f)
#
#
f<-function(df){
max(df$Date)
}
lapply(L,f)
#
#
f<-function(df){
min(df$Date)
}
lapply(L,f)
#
#
f<-function(df){
max(df$Date)
}
lapply(L,f)
#
#
mean(L$IBM$StockPrice()
#
#
mean(L$IBM$StockPrice)
#
#
min(L$GE$StockPrice)
#
#
max(L$Coke$StockPrice)
#
#
median(L$Boeing$StockPrice)
#
#
sd(L$PnG$StockPrice)
#
#
plot(L$Coke$Date,L$Coke$StockPrice,type = '1')
#
plot(L$Coke$Date,L$Coke$StockPrice,type ='l')
#
#
f2<-function(df){
plot(df$Date,df$StockPrice,type='l')
}
lapply(L, f2)
#
#
f2<-function(df){
plot(df$Date,df$StockPrice,type='l')
}
sapply(L, f2)
#
#
f2<-function(df){
plot(df$Date,df$StockPrice,type='l')
}
plot(L$IBM$Date,L$IBM$StockPrice,type='l')
#
#
f2<-function(df){
plot(df$Date,df$StockPrice,type='l')
}
plot(L$IBM$Date,L$IBM$StockPrice,type='l')
line(lapply(L,f2))
#
f2<-function(df){
plot(df$Date,df$StockPrice,type='l')
}
plot(L$IBM$Date,L$IBM$StockPrice,type='l')
line(L$GE$Date,L$IBM$StockPrice,type='l')
#
f2<-function(df){
plot(df$Date,df$StockPrice,type='l')
}
plot(L$IBM$Date,L$IBM$StockPrice,type='l')
line(L$GE$Date,L$GE$StockPrice,type='l')
#
plot(L$IBM$Date,L$IBM$StockPrice,type='l',col='orange')
line(L$GE$Date,L$GE$StockPrice,type='l',col='yellow')
#
plot(L$IBM$Date,L$IBM$StockPrice,type='l',col='orange')
lines(L$GE$Date,L$GE$StockPrice,type='l',col='yellow')
#
#
plot(L$IBM$Date,L$IBM$StockPrice,type='l',col='orange')
lines(L$GE$Date,L$GE$StockPrice,type='l',col='rand_col')
#
plot(L$IBM$Date,L$IBM$StockPrice,type='l',col='orange')
lines(L$GE$Date,L$GE$StockPrice,type='l',col=rand_col)
#
plot(L$IBM$Date,L$IBM$StockPrice,type='l',col='orange')
lines(L$GE$Date,L$GE$StockPrice,type='l',col=rand_color)
#
plot(L$IBM$Date,L$IBM$StockPrice,type='l',col='orange')
lines(L$GE$Date,L$GE$StockPrice,type='l',col='rand_color')
#
plot(L$IBM$Date,L$IBM$StockPrice,type='l',col='orange')
lines(L$GE$Date,L$GE$StockPrice,type='l',col=rand_color(1))
#
plot(L$IBM$Date,L$IBM$StockPrice,type='l',col='orange')
lines(L$GE$Date,L$GE$StockPrice,type='l',col = (np.random.random(), np.random.random(), np.random.random()))
#
plot(L$IBM$Date,L$IBM$StockPrice,type='l',col='orange')
lines(L$GE$Date,L$GE$StockPrice,type='l',col = np.random.random(), np.random.random(),np.random.random())
#
plot(L$IBM$Date,L$IBM$StockPrice,type='l',col='orange')
lines(L$GE$Date,L$GE$StockPrice,type='l',col ='yellow')
#
#
plot(L$IBM$Date,L$IBM$StockPrice,type='l',col='orange')
lines(L$GE$Date,L$GE$StockPrice,type='l',col ='yellow')
lines(L$PnG$Date,L$PnG$StockPrice,type='l',col ='red')
#
