c('Amy','Bob','Cindy','Danny') == c('Danny', 'Cindy')
c('Amy','Bob','Cindy','Danny') %in% c('Danny', 'Cindy')
c(0.1, 0.2, 0.3, 0.4) == (1:4)/10
c(0.1, 0.2, 0.3, 0.4) == (1:3)/10
c(0.1, 0.2, 0.3, 0.4) == (1:4)/10
val=c(500,20,75,400)
val=c(500,20,75,400)
val=c(500,20,75,400)
summary functions produce a single summaries/statistics
math functions produce vectors applies to every elements
功能選項(arguments)：In addition to the input vector, most R function take extra arguments for options
log(val, base=10)
log(val, base=5)
log(val, base=2)
log(val, base=3)
log(val, base=4)
log(val, base=2)
log(val, base=3)
log(val, base=2.5)
log(val, base=2.6)
log(val, base=2.7)
log(val, base=2.8)
log(val, base=2.7)
log(val, base=2.72)
log(val, base=2.73)
log(val, base=2.71)
log(val, base=2.72)
log(val, base=2.723)
log(val, base=2.719)
log(val, base=2.718)
log(val, base=2.717)
log(val, base=2.718)
log(val, base=2.718)
log(val, base=e)
log(val, base=10)
log(val)
log(val, base=10)
log(val)
sqrt(val)
x<-10000
sqrt(x)%>%log(10)
sqrt(x) %>% log(10)
sqrt(x) %>% log(10) %>%mean(x)
sqrt(x) %>% log(10) %>%mean
sqrt(x) %>% log(10) %>% mean
library(magrittr)
sqrt(x) %>% log(10) %>% mean
sqrt(x)  %>% mean
sqrt(x) %>% log(2)
sqrt(x) %>% log(x)
x<-10000
sqrt(x) %>% log(x)
sqrt(x) %>% log(x)
sqrt(x)
log(100)
sqrt(x) %>% log(10)
sqrt(x) %>% log(100)
sqrt(x) %>% log(10)
sqrt(x) %>% log(1)
log(3)
log(10)
sqrt(x) %>% log(3)
sqrt(x) %>% log(3,base=data)
sqrt(x) %>% log(3,base=.)
log(3,base=100)
#
name[height>180]
noBuy = c(3L, 5L, 1L, 1L, 3L)                       # Integer
height = c(175, 168, 180, 181, 169)                 # numeric
isMale = c(FALSE, TRUE, FALSE, TRUE, TRUE)          # logical
name = c("Amy", "Bob", "Cindy", "Danny", "Edward")  # character
gender = factor( c("F", "M", "F", "M", "M") )       # factor
skin_color = factor( c("black", "black", "white", "yellow", "white") )  # factor
noBuy = c(3L, 5L, 1L, 1L, 3L)                       # Integer
height = c(175, 168, 180, 181, 169)                 # numeric
isMale = c(FALSE, TRUE, FALSE, TRUE, TRUE)          # logical
name = c("Amy", "Bob", "Cindy", "Danny", "Edward")  # character
gender = factor( c("F", "M", "F", "M", "M") )       # factor
skin_color = factor( c("black", "black", "white", "yellow", "white") )  # factor
<br><p class="qiz">
<span style="font-size:16px">`r "\U1F5FF"`</span>:
<span style="font-size:16px">`r "\U1F5FF"`</span>:
#
name[height>180]
#
name[height>=180]
#
name[height>180]
#
name[height>180&&skin_color=="yellow"]
#
name[height>180&skin_color=="yellow"]
#
name[height>=180&skin_color=="yellow"]
#
name[height>=180]
<span style="font-size:16px">`r "\U1F5FF"`</span>:
#
name[height>=180 and skin_color=="yellow"]
#
name[height>=180 & skin_color=="yellow"]
#
name[height>180]
#
name[height>180 & skin_color=="yellow"]
c('Amy','Bob','Cindy','Danny') == c('Cindy','Danny')
c('Amy','Bob','Cindy','Danny') == c('Cindy','Cindy','Danny')
c('Amy','Bob','Cindy','Danny') == c('Cindy','Danny')
c('Amy','Bob','Cindy','Danny') == c('Cindy','Danny','Cindy','Danny')
c('Amy','Bob','Cindy','Danny') == c('Cindy','Danny')
#
sum(noBuy[gender=="F"])
#
count(gender[skin_color=="white"]=="F")
#
gender[skin_color=="white"]=="F")
#
gender[skin_color=="white"]=="F")
#
gender=="F"
#
skin_color=="white"
#
mame[skin_color=="white"&gender=="F"]
#
name[skin_color=="white"&gender=="F"]
#
count(name[skin_color=="white"&gender=="F"])
#
table(name[skin_color=="white"&gender=="F"])
#
table(name[skin_color=="white"&gender=="M"])
#
table(name[skin_color=="white"&gender=="F"])
sqrt(x) %>% log(3,base=.)
sqrt(x) %>% log(3)
sqrt(x) %>% log(3)
#
row(name[skin_color=="white"&gender=="F"])
#
(name[skin_color=="white"&gender=="F"])
#
length(name[skin_color=="white"&gender=="F"])
#table(name[skin_color=="white"&gender=="F"])
```
#
```
#
length(name[skin_color=="white"&gender=="F"])
#
```
#
``
#
sum(noBuy[gender=="F"])
#
length(name[skin_color=="white"&gender=="F"])
#
name[skin_color=="white"&gender=="F"]
#
name[skin_color=="white"&gender=="F"]
#
```
<br><hr>
### 2. 資料框(二維)索引 Indexing Data Frames
mean( height[gender == "M"] )
mean( height[gender == "M"] )
<span style="font-size:16px">`r "\U1F5FF"`</span>:
<span style="font-size:16px">`r "\U1F5FF"`</span>:
#
[skin_color=="white"&gender=="F"]
#
skin_color=="white"&gender=="F"
#
```
<br><hr>
<span style="font-size:16px">`r "\U1F5FF"`</span>:
#
name[skin_color=="white"&gender=="F"]
#
```
#
name[skin_color=="white"&gender=="F"]
#
<br><hr>
#
sum(noBuy[gender=="F"])
#
sum(noBuy[gender=="F"])
<span style="font-size:16px">`r "\U1F5FF"`</span>:
<br><hr>
### 2. 資料框(二維)索引 Indexing Data Frames
##### 2.1 資料框的優點 The Benefit of Data Frame
Data frame is the most common and useful data structure.  Usually
+ each row of a data frame represents an subject (unit of analysis) and
```{r}
df = data.frame(
noBuy = c(3L, 5L, 1L, 1L, 3L),
height = c(175, 168, 180, 181, 169),
isMale = c(FALSE, TRUE, FALSE, TRUE, TRUE),
name = c("Amy", "Bob", "Cindy", "Danny", "Edward"),
gender = factor( c("F", "M", "F", "M", "M") ),
skin_color = factor( c("black", "black", "white", "yellow", "white")),
stringsAsFactors=FALSE
)
#
length([skin_color=="white"&gender=="F"])
#
length[skin_color=="white"&gender=="F"]
#
length(skin_color=="white"&gender=="F")
#
length(name[skin_color=="white"&gender=="F"])
#
```
#
length(name[skin_color=="white"&gender=="F"])
#
#
length(name[skin_color=="white"&gender=="F"])
#
```
<br><hr>
#
```
#
(name[skin_color=="white"&gender=="F"])
#
```
#
name[skin_color=="white"&gender=="F"]
#
```
<br><hr>
#
name[skin_color=="white"&gender=="F"]
#
#
name[skin_color=="white"&gender=="F"]
#
#
name[skin_color=="white"&gender=="F"]
#
#
length(name[skin_color=="white"&gender=="F"])
#
subset(df, height > 170 & !isMale)$name #
subset(df, height > 170 & !isMale)$name # names of female who is higher than 170
mean(df$height[df$isMale]) # to caculate mean height of male
df
subset(df, isMale & skin_color == "black")
table(df$gender)
tapply(df$height, df$gender, mean)
df$height[!df$isMale] %>% mean #
View(df)
sum( subset(df, !isMale)$noBuy ) # total number of
subset(df, skin_color == "white" & !isMale ) %>% nrow #
sum(df$skin_color == "white" & !df$isMale ) #
(df$skin_color == "white" & !df$isMale ) #
sum(df$skin_color == "white" & !df$isMale ) #
# Basic installation, setup & formatting.  Do not modify this code chunk.
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8); options(scipen=20, digits=4, width=80)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(magrittr)
D = read.csv("data/comics1.csv")
nrow(D)
ncol(D)
str(D)
summary(D)
c( mean=mean(D$year), median=median(D$year),
max=max(D$year), min=min(D$year)  )
summary(D$year)
par(mfrow=c(1,2), mar=c(2,2,3,2), cex=0.6)  # 2 plots in a row, smaller font
hist(D$year, main="year")
hist(D$appearances, main="appearances")
# Basic installation, setup & formatting.  Do not modify this code chunk.
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8); options(scipen=20, digits=4, width=80)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(magrittr)
D = read.csv("data/comics1.csv")
nrow(D)
ncol(D)
str(D)
summary(D)
c( mean=mean(D$year), median=median(D$year),
max=max(D$year), min=min(D$year)  )
summary(D$year)
par(mfrow=c(1,2), mar=c(2,2,3,2), cex=0.6)  # 2 plots in a row, smaller font
hist(D$year, main="year")
hist(D$appearances, main="appearances")
# Basic installation, setup & formatting.  Do not modify this code chunk.
rm(list=ls(all=T))
knitr::opts_chunk$set(comment = NA)
knitr::opts_knit$set(global.par = TRUE)
par(cex=0.8); options(scipen=20, digits=4, width=80)
if(!require(pacman)) install.packages("pacman")
pacman::p_load(magrittr)
D = read.csv("data/comics1.csv")
nrow(D)
ncol(D)
str(D)
summary(D)
c( mean=mean(D$year), median=median(D$year),
max=max(D$year), min=min(D$year)  )
summary(D$year)
par(mfrow=c(1,2), mar=c(2,2,3,2), cex=0.6)  # 2 plots in a row, smaller font
hist(D$year, main="year")
hist(D$appearances, main="appearances")
View(D)
